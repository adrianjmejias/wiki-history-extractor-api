worker_processes auto;

events { worker_connections 1024; }

http {

	# Don't tell nginx version to clients.
    server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 0;

	# Upstream definitions
	upstream flask_app {
		server flask_1 max_fails=3 fail_timeout=30s;
		# # Uncomment for load balancing
		# server flask_2 max_fails=3 fail_timeout=30s;
		# server flask_3 max_fails=3 fail_timeout=30s;
	}
	 
	upstream monitor {
		server flower:5555;
	}

	# Servers conf
	server {
		listen 80;
		charset utf-8;
		server_name flask_app;

		location / {
			include uwsgi_params;
        	uwsgi_pass flask_app;
			
			# proxy_pass http://flask_app;
			# proxy_redirect off;
			# proxy_set_header Host $host;
			# proxy_set_header X-Real-IP $remote_addr;
			# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# proxy_set_header X-Forwarded-Host $server_name;
		}
	}

	server {
		listen 80;
		charset utf-8;
		server_name monitor;

		location /monitor {
			proxy_pass http://monitor;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
		}
	}
}